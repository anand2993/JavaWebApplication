# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

variables:
  HELM_VERSION: 'v3.9.4' 

stages:
   - stage: Build
     displayName: Build
     jobs:
       - job: Build
         displayName: Build
         pool:
            vmImage: ubuntu-latest
         steps:
          - task: JavaToolInstaller@0
            inputs:
              versionSpec: '17'
              jdkArchitectureOption: x64
              jdkSourceOption: PreInstalled
          - script: | 
             echo 'Maven version:'
              mvn -version
            displayName: Show maven Version

          - task: Maven@3
            inputs:
              mavenPomFile: 'pom.xml'
              goals: 'clean package'
          - task: CopyFiles@2
            inputs:
              Contents: 'target/**'
              TargetFolder: '$(Build.ArtifactStagingDirectory)/target'
          - task: PublishBuildArtifacts@1
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)/target'
              ArtifactName: 'target'
              
          - task: Docker@2
            inputs:
              containerRegistry: 'DockerLink'
              repository: 'anand2993/webapp'
              command: 'buildAndPush'
              Dockerfile: '**/Dockerfile'

   - stage: Deploy
     displayName: Deploy
     jobs:
      - job: deploy
        steps:
          - task: HelmInstaller@1
            inputs:
              helmVersion: $($HELM_VERSION)
            displayName: "Install Helm on Azure DevOps"

          - script: |
               kubectl create namespace my-app || true
               kubectl apply -f mysql-secret.yaml
               helm repo add bitnami https://charts.bitnami.com/bitnami
               helm install my-mysql bitnami/mysql --namespace my-app -f mysql-values.yaml
            displayName: 'Deploy MySQL with Helm'
      - job: DeployJavaApp
        dependsOn: deploy
        steps:
         - script: |
             kubectl apply -f deployment.yaml
           displayName: 'Deploy Java Application'      